# This workflow will build and push a new container image to Amazon ECR,
# and then will deploy a new task definition to Amazon ECS, when there is a push to the "master" branch.
#
# To use this workflow, you will need to complete the following set-up steps:
#
# 1. Create an ECR repository to store your images.
#    For example: `aws ecr create-repository --repository-name my-ecr-repo --region us-east-2`.
#    Replace the value of the `ECR_REPOSITORY` environment variable in the workflow below with your repository's name.
#    Replace the value of the `AWS_REGION` environment variable in the workflow below with your repository's region.
#
# 2. Create an ECS task definition, an ECS cluster, and an ECS service.
#    For example, follow the Getting Started guide on the ECS console:
#      https://us-east-2.console.aws.amazon.com/ecs/home?region=us-east-2#/firstRun
#    Replace the value of the `ECS_SERVICE` environment variable in the workflow below with the name you set for the Amazon ECS service.
#    Replace the value of the `ECS_CLUSTER` environment variable in the workflow below with the name you set for the cluster.
#
# 3. Store your ECS task definition as a JSON file in your repository.
#    The format should follow the output of `aws ecs register-task-definition --generate-cli-skeleton`.
#    Replace the value of the `ECS_TASK_DEFINITION` environment variable in the workflow below with the path to the JSON file.
#    Replace the value of the `CONTAINER_NAME` environment variable in the workflow below with the name of the container
#    in the `containerDefinitions` section of the task definition.
#
# 4. Store an IAM user access key in GitHub Actions secrets named `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY`.
#    See the documentation for each action used below for the recommended IAM policies for this IAM user,
#    and best practices on handling the access key credentials.

name: CI-CD-to-AWS-ElasticBeanstalk

on:
  push:
    branches:
      - "master"

env:
  EB_PACKAGE_S3_BUCKET_NAME : "my-it-portfolio-bucket"
  EB_APPLICATION_NAME       : "my-it-portfolio-app"
  EB_ENVIRONMENT_NAME       : "Myitportfolioapp-env-1"
  DEPLOY_PACKAGE_NAME       : "my_it_portfolio_${{ github.sha }}.zip"
  AWS_REGION_NAME           : "us-west-2"

jobs:
  ci-part:
  
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Git clone repo
      uses: actions/checkout@v3
      
    - name: Create zip deployment package
      run : zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.MY_AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY }}
        aws-region: ${{ env.AWS_REGION_NAME }}

    - name: Login to Amazon ECR
      id  : login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      
    - name: Copy package to AWS S3 bucket
      run : aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}
    
    - name: Print Happy Message for CI
    - run : echo "CI Pipeline finished successfully"
